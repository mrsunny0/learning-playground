
Tutorial-10-ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000762  000007d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000762  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000007da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000838  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000914  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e9  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041d  00000000  00000000  000019e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c4  00000000  00000000  00001e04  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000428  00000000  00000000  00001ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000e0  00000000  00000000  000022f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000023d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e6       	ldi	r30, 0x62	; 98
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  8e:	0c 94 af 03 	jmp	0x75e	; 0x75e <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <initADC>:
	// return the value stored in this register, 10-bit value by default, stored in 16-bit
	return ADC; 
}

void setup() 
{
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	80 64       	ori	r24, 0x40	; 64
  9e:	80 83       	st	Z, r24
  a0:	ea e7       	ldi	r30, 0x7A	; 122
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	80 81       	ld	r24, Z
  a6:	87 60       	ori	r24, 0x07	; 7
  a8:	80 83       	st	Z, r24
  aa:	80 81       	ld	r24, Z
  ac:	80 68       	ori	r24, 0x80	; 128
  ae:	80 83       	st	Z, r24
  b0:	08 95       	ret

000000b2 <readADC>:
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	80 64       	ori	r24, 0x40	; 64
  ba:	80 83       	st	Z, r24
  bc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
  c0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
  c4:	08 95       	ret

000000c6 <main>:
	
}

int main(void)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	2a 97       	sbiw	r28, 0x0a	; 10
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	f8 94       	cli
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	cd bf       	out	0x3d, r28	; 61
	initUART();
  da:	0e 94 9a 00 	call	0x134	; 0x134 <initUART>
	initADC();
  de:	0e 94 4b 00 	call	0x96	; 0x96 <initADC>
    {
		// read data
		data = readADC();

		// convert data
		sprintf(buffer, "%d", data);
  e2:	0f 2e       	mov	r0, r31
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	ef 2e       	mov	r14, r31
  e8:	f1 e0       	ldi	r31, 0x01	; 1
  ea:	ff 2e       	mov	r15, r31
  ec:	f0 2d       	mov	r31, r0
  ee:	8e 01       	movw	r16, r28
  f0:	0f 5f       	subi	r16, 0xFF	; 255
  f2:	1f 4f       	sbci	r17, 0xFF	; 255
	char buffer[10];
	
    while (1) 
    {
		// read data
		data = readADC();
  f4:	0e 94 59 00 	call	0xb2	; 0xb2 <readADC>

		// convert data
		sprintf(buffer, "%d", data);
  f8:	9f 93       	push	r25
  fa:	8f 93       	push	r24
  fc:	ff 92       	push	r15
  fe:	ef 92       	push	r14
 100:	1f 93       	push	r17
 102:	0f 93       	push	r16
 104:	0e 94 c5 00 	call	0x18a	; 0x18a <sprintf>
		sendString(buffer);
 108:	c8 01       	movw	r24, r16
 10a:	0e 94 b6 00 	call	0x16c	; 0x16c <sendString>
		sendChar('\n');
 10e:	8a e0       	ldi	r24, 0x0A	; 10
 110:	0e 94 ae 00 	call	0x15c	; 0x15c <sendChar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	83 ed       	ldi	r24, 0xD3	; 211
 118:	90 e3       	ldi	r25, 0x30	; 48
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x54>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x5e>
 124:	00 00       	nop
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	0f 90       	pop	r0
 130:	0f 90       	pop	r0
 132:	e0 cf       	rjmp	.-64     	; 0xf4 <main+0x2e>

00000134 <initUART>:

#include <avr/io.h>
#include "UART.h"

void initUART() {
	UBRR0L = 103; // check 24.11, examples of baud rate settings, table does the math for you
 134:	87 e6       	ldi	r24, 0x67	; 103
 136:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B |= (1<<TXEN0); // set status of bit
 13a:	e1 ec       	ldi	r30, 0xC1	; 193
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	88 60       	ori	r24, 0x08	; 8
 142:	80 83       	st	Z, r24
	UCSR0B |= (1<<RXEN0); // receive enable bit
 144:	80 81       	ld	r24, Z
 146:	80 61       	ori	r24, 0x10	; 16
 148:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ00) | (1<<UCSZ01); // 1 bit of data per transfer 24.12.3
 14a:	a2 ec       	ldi	r26, 0xC2	; 194
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	8c 91       	ld	r24, X
 150:	86 60       	ori	r24, 0x06	; 6
 152:	8c 93       	st	X, r24
	
	// enabling interrupt
	UCSR0B |= (1 << RXCIE0); // Enable the USART receive Complete interrupt (USART_RXC)
 154:	80 81       	ld	r24, Z
 156:	80 68       	ori	r24, 0x80	; 128
 158:	80 83       	st	Z, r24
 15a:	08 95       	ret

0000015c <sendChar>:
}

void sendChar(char data) {
	while(!(UCSR0A & (1<<UDRE0)));
 15c:	e0 ec       	ldi	r30, 0xC0	; 192
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	90 81       	ld	r25, Z
 162:	95 ff       	sbrs	r25, 5
 164:	fd cf       	rjmp	.-6      	; 0x160 <sendChar+0x4>
	UDR0 = data;
 166:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 16a:	08 95       	ret

0000016c <sendString>:
}

void sendString(char* data) {
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	ec 01       	movw	r28, r24
	while(*data) {
 172:	88 81       	ld	r24, Y
 174:	88 23       	and	r24, r24
 176:	31 f0       	breq	.+12     	; 0x184 <sendString+0x18>
 178:	21 96       	adiw	r28, 0x01	; 1
		sendChar(*data); // access content of pointer
 17a:	0e 94 ae 00 	call	0x15c	; 0x15c <sendChar>
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}

void sendString(char* data) {
	while(*data) {
 17e:	89 91       	ld	r24, Y+
 180:	81 11       	cpse	r24, r1
 182:	fb cf       	rjmp	.-10     	; 0x17a <sendString+0xe>
		sendChar(*data); // access content of pointer
		data++; // access next character in memory
	}
}
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	08 95       	ret

0000018a <sprintf>:
 18a:	ae e0       	ldi	r26, 0x0E	; 14
 18c:	b0 e0       	ldi	r27, 0x00	; 0
 18e:	eb ec       	ldi	r30, 0xCB	; 203
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	0c 94 86 03 	jmp	0x70c	; 0x70c <__prologue_saves__+0x1c>
 196:	0d 89       	ldd	r16, Y+21	; 0x15
 198:	1e 89       	ldd	r17, Y+22	; 0x16
 19a:	86 e0       	ldi	r24, 0x06	; 6
 19c:	8c 83       	std	Y+4, r24	; 0x04
 19e:	1a 83       	std	Y+2, r17	; 0x02
 1a0:	09 83       	std	Y+1, r16	; 0x01
 1a2:	8f ef       	ldi	r24, 0xFF	; 255
 1a4:	9f e7       	ldi	r25, 0x7F	; 127
 1a6:	9e 83       	std	Y+6, r25	; 0x06
 1a8:	8d 83       	std	Y+5, r24	; 0x05
 1aa:	ae 01       	movw	r20, r28
 1ac:	47 5e       	subi	r20, 0xE7	; 231
 1ae:	5f 4f       	sbci	r21, 0xFF	; 255
 1b0:	6f 89       	ldd	r22, Y+23	; 0x17
 1b2:	78 8d       	ldd	r23, Y+24	; 0x18
 1b4:	ce 01       	movw	r24, r28
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <vfprintf>
 1bc:	ef 81       	ldd	r30, Y+7	; 0x07
 1be:	f8 85       	ldd	r31, Y+8	; 0x08
 1c0:	e0 0f       	add	r30, r16
 1c2:	f1 1f       	adc	r31, r17
 1c4:	10 82       	st	Z, r1
 1c6:	2e 96       	adiw	r28, 0x0e	; 14
 1c8:	e4 e0       	ldi	r30, 0x04	; 4
 1ca:	0c 94 a2 03 	jmp	0x744	; 0x744 <__epilogue_restores__+0x1c>

000001ce <vfprintf>:
 1ce:	ab e0       	ldi	r26, 0x0B	; 11
 1d0:	b0 e0       	ldi	r27, 0x00	; 0
 1d2:	ed ee       	ldi	r30, 0xED	; 237
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <__prologue_saves__>
 1da:	6c 01       	movw	r12, r24
 1dc:	7b 01       	movw	r14, r22
 1de:	8a 01       	movw	r16, r20
 1e0:	fc 01       	movw	r30, r24
 1e2:	17 82       	std	Z+7, r1	; 0x07
 1e4:	16 82       	std	Z+6, r1	; 0x06
 1e6:	83 81       	ldd	r24, Z+3	; 0x03
 1e8:	81 ff       	sbrs	r24, 1
 1ea:	cc c1       	rjmp	.+920    	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 1ec:	ce 01       	movw	r24, r28
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	3c 01       	movw	r6, r24
 1f2:	f6 01       	movw	r30, r12
 1f4:	93 81       	ldd	r25, Z+3	; 0x03
 1f6:	f7 01       	movw	r30, r14
 1f8:	93 fd       	sbrc	r25, 3
 1fa:	85 91       	lpm	r24, Z+
 1fc:	93 ff       	sbrs	r25, 3
 1fe:	81 91       	ld	r24, Z+
 200:	7f 01       	movw	r14, r30
 202:	88 23       	and	r24, r24
 204:	09 f4       	brne	.+2      	; 0x208 <vfprintf+0x3a>
 206:	ba c1       	rjmp	.+884    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 208:	85 32       	cpi	r24, 0x25	; 37
 20a:	39 f4       	brne	.+14     	; 0x21a <vfprintf+0x4c>
 20c:	93 fd       	sbrc	r25, 3
 20e:	85 91       	lpm	r24, Z+
 210:	93 ff       	sbrs	r25, 3
 212:	81 91       	ld	r24, Z+
 214:	7f 01       	movw	r14, r30
 216:	85 32       	cpi	r24, 0x25	; 37
 218:	29 f4       	brne	.+10     	; 0x224 <vfprintf+0x56>
 21a:	b6 01       	movw	r22, r12
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 222:	e7 cf       	rjmp	.-50     	; 0x1f2 <vfprintf+0x24>
 224:	91 2c       	mov	r9, r1
 226:	21 2c       	mov	r2, r1
 228:	31 2c       	mov	r3, r1
 22a:	ff e1       	ldi	r31, 0x1F	; 31
 22c:	f3 15       	cp	r31, r3
 22e:	d8 f0       	brcs	.+54     	; 0x266 <vfprintf+0x98>
 230:	8b 32       	cpi	r24, 0x2B	; 43
 232:	79 f0       	breq	.+30     	; 0x252 <vfprintf+0x84>
 234:	38 f4       	brcc	.+14     	; 0x244 <vfprintf+0x76>
 236:	80 32       	cpi	r24, 0x20	; 32
 238:	79 f0       	breq	.+30     	; 0x258 <vfprintf+0x8a>
 23a:	83 32       	cpi	r24, 0x23	; 35
 23c:	a1 f4       	brne	.+40     	; 0x266 <vfprintf+0x98>
 23e:	23 2d       	mov	r18, r3
 240:	20 61       	ori	r18, 0x10	; 16
 242:	1d c0       	rjmp	.+58     	; 0x27e <vfprintf+0xb0>
 244:	8d 32       	cpi	r24, 0x2D	; 45
 246:	61 f0       	breq	.+24     	; 0x260 <vfprintf+0x92>
 248:	80 33       	cpi	r24, 0x30	; 48
 24a:	69 f4       	brne	.+26     	; 0x266 <vfprintf+0x98>
 24c:	23 2d       	mov	r18, r3
 24e:	21 60       	ori	r18, 0x01	; 1
 250:	16 c0       	rjmp	.+44     	; 0x27e <vfprintf+0xb0>
 252:	83 2d       	mov	r24, r3
 254:	82 60       	ori	r24, 0x02	; 2
 256:	38 2e       	mov	r3, r24
 258:	e3 2d       	mov	r30, r3
 25a:	e4 60       	ori	r30, 0x04	; 4
 25c:	3e 2e       	mov	r3, r30
 25e:	2a c0       	rjmp	.+84     	; 0x2b4 <vfprintf+0xe6>
 260:	f3 2d       	mov	r31, r3
 262:	f8 60       	ori	r31, 0x08	; 8
 264:	1d c0       	rjmp	.+58     	; 0x2a0 <vfprintf+0xd2>
 266:	37 fc       	sbrc	r3, 7
 268:	2d c0       	rjmp	.+90     	; 0x2c4 <vfprintf+0xf6>
 26a:	20 ed       	ldi	r18, 0xD0	; 208
 26c:	28 0f       	add	r18, r24
 26e:	2a 30       	cpi	r18, 0x0A	; 10
 270:	40 f0       	brcs	.+16     	; 0x282 <vfprintf+0xb4>
 272:	8e 32       	cpi	r24, 0x2E	; 46
 274:	b9 f4       	brne	.+46     	; 0x2a4 <vfprintf+0xd6>
 276:	36 fc       	sbrc	r3, 6
 278:	81 c1       	rjmp	.+770    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 27a:	23 2d       	mov	r18, r3
 27c:	20 64       	ori	r18, 0x40	; 64
 27e:	32 2e       	mov	r3, r18
 280:	19 c0       	rjmp	.+50     	; 0x2b4 <vfprintf+0xe6>
 282:	36 fe       	sbrs	r3, 6
 284:	06 c0       	rjmp	.+12     	; 0x292 <vfprintf+0xc4>
 286:	8a e0       	ldi	r24, 0x0A	; 10
 288:	98 9e       	mul	r9, r24
 28a:	20 0d       	add	r18, r0
 28c:	11 24       	eor	r1, r1
 28e:	92 2e       	mov	r9, r18
 290:	11 c0       	rjmp	.+34     	; 0x2b4 <vfprintf+0xe6>
 292:	ea e0       	ldi	r30, 0x0A	; 10
 294:	2e 9e       	mul	r2, r30
 296:	20 0d       	add	r18, r0
 298:	11 24       	eor	r1, r1
 29a:	22 2e       	mov	r2, r18
 29c:	f3 2d       	mov	r31, r3
 29e:	f0 62       	ori	r31, 0x20	; 32
 2a0:	3f 2e       	mov	r3, r31
 2a2:	08 c0       	rjmp	.+16     	; 0x2b4 <vfprintf+0xe6>
 2a4:	8c 36       	cpi	r24, 0x6C	; 108
 2a6:	21 f4       	brne	.+8      	; 0x2b0 <vfprintf+0xe2>
 2a8:	83 2d       	mov	r24, r3
 2aa:	80 68       	ori	r24, 0x80	; 128
 2ac:	38 2e       	mov	r3, r24
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <vfprintf+0xe6>
 2b0:	88 36       	cpi	r24, 0x68	; 104
 2b2:	41 f4       	brne	.+16     	; 0x2c4 <vfprintf+0xf6>
 2b4:	f7 01       	movw	r30, r14
 2b6:	93 fd       	sbrc	r25, 3
 2b8:	85 91       	lpm	r24, Z+
 2ba:	93 ff       	sbrs	r25, 3
 2bc:	81 91       	ld	r24, Z+
 2be:	7f 01       	movw	r14, r30
 2c0:	81 11       	cpse	r24, r1
 2c2:	b3 cf       	rjmp	.-154    	; 0x22a <vfprintf+0x5c>
 2c4:	98 2f       	mov	r25, r24
 2c6:	9f 7d       	andi	r25, 0xDF	; 223
 2c8:	95 54       	subi	r25, 0x45	; 69
 2ca:	93 30       	cpi	r25, 0x03	; 3
 2cc:	28 f4       	brcc	.+10     	; 0x2d8 <vfprintf+0x10a>
 2ce:	0c 5f       	subi	r16, 0xFC	; 252
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
 2d2:	9f e3       	ldi	r25, 0x3F	; 63
 2d4:	99 83       	std	Y+1, r25	; 0x01
 2d6:	0d c0       	rjmp	.+26     	; 0x2f2 <vfprintf+0x124>
 2d8:	83 36       	cpi	r24, 0x63	; 99
 2da:	31 f0       	breq	.+12     	; 0x2e8 <vfprintf+0x11a>
 2dc:	83 37       	cpi	r24, 0x73	; 115
 2de:	71 f0       	breq	.+28     	; 0x2fc <vfprintf+0x12e>
 2e0:	83 35       	cpi	r24, 0x53	; 83
 2e2:	09 f0       	breq	.+2      	; 0x2e6 <vfprintf+0x118>
 2e4:	59 c0       	rjmp	.+178    	; 0x398 <vfprintf+0x1ca>
 2e6:	21 c0       	rjmp	.+66     	; 0x32a <vfprintf+0x15c>
 2e8:	f8 01       	movw	r30, r16
 2ea:	80 81       	ld	r24, Z
 2ec:	89 83       	std	Y+1, r24	; 0x01
 2ee:	0e 5f       	subi	r16, 0xFE	; 254
 2f0:	1f 4f       	sbci	r17, 0xFF	; 255
 2f2:	88 24       	eor	r8, r8
 2f4:	83 94       	inc	r8
 2f6:	91 2c       	mov	r9, r1
 2f8:	53 01       	movw	r10, r6
 2fa:	13 c0       	rjmp	.+38     	; 0x322 <vfprintf+0x154>
 2fc:	28 01       	movw	r4, r16
 2fe:	f2 e0       	ldi	r31, 0x02	; 2
 300:	4f 0e       	add	r4, r31
 302:	51 1c       	adc	r5, r1
 304:	f8 01       	movw	r30, r16
 306:	a0 80       	ld	r10, Z
 308:	b1 80       	ldd	r11, Z+1	; 0x01
 30a:	36 fe       	sbrs	r3, 6
 30c:	03 c0       	rjmp	.+6      	; 0x314 <vfprintf+0x146>
 30e:	69 2d       	mov	r22, r9
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	02 c0       	rjmp	.+4      	; 0x318 <vfprintf+0x14a>
 314:	6f ef       	ldi	r22, 0xFF	; 255
 316:	7f ef       	ldi	r23, 0xFF	; 255
 318:	c5 01       	movw	r24, r10
 31a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <strnlen>
 31e:	4c 01       	movw	r8, r24
 320:	82 01       	movw	r16, r4
 322:	f3 2d       	mov	r31, r3
 324:	ff 77       	andi	r31, 0x7F	; 127
 326:	3f 2e       	mov	r3, r31
 328:	16 c0       	rjmp	.+44     	; 0x356 <vfprintf+0x188>
 32a:	28 01       	movw	r4, r16
 32c:	22 e0       	ldi	r18, 0x02	; 2
 32e:	42 0e       	add	r4, r18
 330:	51 1c       	adc	r5, r1
 332:	f8 01       	movw	r30, r16
 334:	a0 80       	ld	r10, Z
 336:	b1 80       	ldd	r11, Z+1	; 0x01
 338:	36 fe       	sbrs	r3, 6
 33a:	03 c0       	rjmp	.+6      	; 0x342 <vfprintf+0x174>
 33c:	69 2d       	mov	r22, r9
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	02 c0       	rjmp	.+4      	; 0x346 <vfprintf+0x178>
 342:	6f ef       	ldi	r22, 0xFF	; 255
 344:	7f ef       	ldi	r23, 0xFF	; 255
 346:	c5 01       	movw	r24, r10
 348:	0e 94 c8 02 	call	0x590	; 0x590 <strnlen_P>
 34c:	4c 01       	movw	r8, r24
 34e:	f3 2d       	mov	r31, r3
 350:	f0 68       	ori	r31, 0x80	; 128
 352:	3f 2e       	mov	r3, r31
 354:	82 01       	movw	r16, r4
 356:	33 fc       	sbrc	r3, 3
 358:	1b c0       	rjmp	.+54     	; 0x390 <vfprintf+0x1c2>
 35a:	82 2d       	mov	r24, r2
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	88 16       	cp	r8, r24
 360:	99 06       	cpc	r9, r25
 362:	b0 f4       	brcc	.+44     	; 0x390 <vfprintf+0x1c2>
 364:	b6 01       	movw	r22, r12
 366:	80 e2       	ldi	r24, 0x20	; 32
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 36e:	2a 94       	dec	r2
 370:	f4 cf       	rjmp	.-24     	; 0x35a <vfprintf+0x18c>
 372:	f5 01       	movw	r30, r10
 374:	37 fc       	sbrc	r3, 7
 376:	85 91       	lpm	r24, Z+
 378:	37 fe       	sbrs	r3, 7
 37a:	81 91       	ld	r24, Z+
 37c:	5f 01       	movw	r10, r30
 37e:	b6 01       	movw	r22, r12
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 386:	21 10       	cpse	r2, r1
 388:	2a 94       	dec	r2
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	82 1a       	sub	r8, r18
 38e:	91 08       	sbc	r9, r1
 390:	81 14       	cp	r8, r1
 392:	91 04       	cpc	r9, r1
 394:	71 f7       	brne	.-36     	; 0x372 <vfprintf+0x1a4>
 396:	e8 c0       	rjmp	.+464    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 398:	84 36       	cpi	r24, 0x64	; 100
 39a:	11 f0       	breq	.+4      	; 0x3a0 <vfprintf+0x1d2>
 39c:	89 36       	cpi	r24, 0x69	; 105
 39e:	41 f5       	brne	.+80     	; 0x3f0 <vfprintf+0x222>
 3a0:	f8 01       	movw	r30, r16
 3a2:	37 fe       	sbrs	r3, 7
 3a4:	07 c0       	rjmp	.+14     	; 0x3b4 <vfprintf+0x1e6>
 3a6:	60 81       	ld	r22, Z
 3a8:	71 81       	ldd	r23, Z+1	; 0x01
 3aa:	82 81       	ldd	r24, Z+2	; 0x02
 3ac:	93 81       	ldd	r25, Z+3	; 0x03
 3ae:	0c 5f       	subi	r16, 0xFC	; 252
 3b0:	1f 4f       	sbci	r17, 0xFF	; 255
 3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <vfprintf+0x1f6>
 3b4:	60 81       	ld	r22, Z
 3b6:	71 81       	ldd	r23, Z+1	; 0x01
 3b8:	07 2e       	mov	r0, r23
 3ba:	00 0c       	add	r0, r0
 3bc:	88 0b       	sbc	r24, r24
 3be:	99 0b       	sbc	r25, r25
 3c0:	0e 5f       	subi	r16, 0xFE	; 254
 3c2:	1f 4f       	sbci	r17, 0xFF	; 255
 3c4:	f3 2d       	mov	r31, r3
 3c6:	ff 76       	andi	r31, 0x6F	; 111
 3c8:	3f 2e       	mov	r3, r31
 3ca:	97 ff       	sbrs	r25, 7
 3cc:	09 c0       	rjmp	.+18     	; 0x3e0 <vfprintf+0x212>
 3ce:	90 95       	com	r25
 3d0:	80 95       	com	r24
 3d2:	70 95       	com	r23
 3d4:	61 95       	neg	r22
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	f0 68       	ori	r31, 0x80	; 128
 3de:	3f 2e       	mov	r3, r31
 3e0:	2a e0       	ldi	r18, 0x0A	; 10
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	a3 01       	movw	r20, r6
 3e6:	0e 94 1a 03 	call	0x634	; 0x634 <__ultoa_invert>
 3ea:	88 2e       	mov	r8, r24
 3ec:	86 18       	sub	r8, r6
 3ee:	45 c0       	rjmp	.+138    	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 3f0:	85 37       	cpi	r24, 0x75	; 117
 3f2:	31 f4       	brne	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f4:	23 2d       	mov	r18, r3
 3f6:	2f 7e       	andi	r18, 0xEF	; 239
 3f8:	b2 2e       	mov	r11, r18
 3fa:	2a e0       	ldi	r18, 0x0A	; 10
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	25 c0       	rjmp	.+74     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 400:	93 2d       	mov	r25, r3
 402:	99 7f       	andi	r25, 0xF9	; 249
 404:	b9 2e       	mov	r11, r25
 406:	8f 36       	cpi	r24, 0x6F	; 111
 408:	c1 f0       	breq	.+48     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 40a:	18 f4       	brcc	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40c:	88 35       	cpi	r24, 0x58	; 88
 40e:	79 f0       	breq	.+30     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 410:	b5 c0       	rjmp	.+362    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 412:	80 37       	cpi	r24, 0x70	; 112
 414:	19 f0       	breq	.+6      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 416:	88 37       	cpi	r24, 0x78	; 120
 418:	21 f0       	breq	.+8      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41a:	b0 c0       	rjmp	.+352    	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 41c:	e9 2f       	mov	r30, r25
 41e:	e0 61       	ori	r30, 0x10	; 16
 420:	be 2e       	mov	r11, r30
 422:	b4 fe       	sbrs	r11, 4
 424:	0d c0       	rjmp	.+26     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 426:	fb 2d       	mov	r31, r11
 428:	f4 60       	ori	r31, 0x04	; 4
 42a:	bf 2e       	mov	r11, r31
 42c:	09 c0       	rjmp	.+18     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 42e:	34 fe       	sbrs	r3, 4
 430:	0a c0       	rjmp	.+20     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 432:	29 2f       	mov	r18, r25
 434:	26 60       	ori	r18, 0x06	; 6
 436:	b2 2e       	mov	r11, r18
 438:	06 c0       	rjmp	.+12     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43a:	28 e0       	ldi	r18, 0x08	; 8
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	05 c0       	rjmp	.+10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 440:	20 e1       	ldi	r18, 0x10	; 16
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 446:	20 e1       	ldi	r18, 0x10	; 16
 448:	32 e0       	ldi	r19, 0x02	; 2
 44a:	f8 01       	movw	r30, r16
 44c:	b7 fe       	sbrs	r11, 7
 44e:	07 c0       	rjmp	.+14     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 450:	60 81       	ld	r22, Z
 452:	71 81       	ldd	r23, Z+1	; 0x01
 454:	82 81       	ldd	r24, Z+2	; 0x02
 456:	93 81       	ldd	r25, Z+3	; 0x03
 458:	0c 5f       	subi	r16, 0xFC	; 252
 45a:	1f 4f       	sbci	r17, 0xFF	; 255
 45c:	06 c0       	rjmp	.+12     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 45e:	60 81       	ld	r22, Z
 460:	71 81       	ldd	r23, Z+1	; 0x01
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 5f       	subi	r16, 0xFE	; 254
 468:	1f 4f       	sbci	r17, 0xFF	; 255
 46a:	a3 01       	movw	r20, r6
 46c:	0e 94 1a 03 	call	0x634	; 0x634 <__ultoa_invert>
 470:	88 2e       	mov	r8, r24
 472:	86 18       	sub	r8, r6
 474:	fb 2d       	mov	r31, r11
 476:	ff 77       	andi	r31, 0x7F	; 127
 478:	3f 2e       	mov	r3, r31
 47a:	36 fe       	sbrs	r3, 6
 47c:	0d c0       	rjmp	.+26     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 47e:	23 2d       	mov	r18, r3
 480:	2e 7f       	andi	r18, 0xFE	; 254
 482:	a2 2e       	mov	r10, r18
 484:	89 14       	cp	r8, r9
 486:	58 f4       	brcc	.+22     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 488:	34 fe       	sbrs	r3, 4
 48a:	0b c0       	rjmp	.+22     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 48c:	32 fc       	sbrc	r3, 2
 48e:	09 c0       	rjmp	.+18     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 490:	83 2d       	mov	r24, r3
 492:	8e 7e       	andi	r24, 0xEE	; 238
 494:	a8 2e       	mov	r10, r24
 496:	05 c0       	rjmp	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 498:	b8 2c       	mov	r11, r8
 49a:	a3 2c       	mov	r10, r3
 49c:	03 c0       	rjmp	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49e:	b8 2c       	mov	r11, r8
 4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4a2:	b9 2c       	mov	r11, r9
 4a4:	a4 fe       	sbrs	r10, 4
 4a6:	0f c0       	rjmp	.+30     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4a8:	fe 01       	movw	r30, r28
 4aa:	e8 0d       	add	r30, r8
 4ac:	f1 1d       	adc	r31, r1
 4ae:	80 81       	ld	r24, Z
 4b0:	80 33       	cpi	r24, 0x30	; 48
 4b2:	21 f4       	brne	.+8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b4:	9a 2d       	mov	r25, r10
 4b6:	99 7e       	andi	r25, 0xE9	; 233
 4b8:	a9 2e       	mov	r10, r25
 4ba:	09 c0       	rjmp	.+18     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4bc:	a2 fe       	sbrs	r10, 2
 4be:	06 c0       	rjmp	.+12     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c0:	b3 94       	inc	r11
 4c2:	b3 94       	inc	r11
 4c4:	04 c0       	rjmp	.+8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c6:	8a 2d       	mov	r24, r10
 4c8:	86 78       	andi	r24, 0x86	; 134
 4ca:	09 f0       	breq	.+2      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4cc:	b3 94       	inc	r11
 4ce:	a3 fc       	sbrc	r10, 3
 4d0:	11 c0       	rjmp	.+34     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4d2:	a0 fe       	sbrs	r10, 0
 4d4:	06 c0       	rjmp	.+12     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d6:	b2 14       	cp	r11, r2
 4d8:	88 f4       	brcc	.+34     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4da:	28 0c       	add	r2, r8
 4dc:	92 2c       	mov	r9, r2
 4de:	9b 18       	sub	r9, r11
 4e0:	0e c0       	rjmp	.+28     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e2:	b2 14       	cp	r11, r2
 4e4:	60 f4       	brcc	.+24     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e6:	b6 01       	movw	r22, r12
 4e8:	80 e2       	ldi	r24, 0x20	; 32
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 4f0:	b3 94       	inc	r11
 4f2:	f7 cf       	rjmp	.-18     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4f4:	b2 14       	cp	r11, r2
 4f6:	18 f4       	brcc	.+6      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f8:	2b 18       	sub	r2, r11
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fc:	98 2c       	mov	r9, r8
 4fe:	21 2c       	mov	r2, r1
 500:	a4 fe       	sbrs	r10, 4
 502:	10 c0       	rjmp	.+32     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 504:	b6 01       	movw	r22, r12
 506:	80 e3       	ldi	r24, 0x30	; 48
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 50e:	a2 fe       	sbrs	r10, 2
 510:	17 c0       	rjmp	.+46     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 512:	a1 fc       	sbrc	r10, 1
 514:	03 c0       	rjmp	.+6      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 516:	88 e7       	ldi	r24, 0x78	; 120
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	02 c0       	rjmp	.+4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51c:	88 e5       	ldi	r24, 0x58	; 88
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	b6 01       	movw	r22, r12
 522:	0c c0       	rjmp	.+24     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 524:	8a 2d       	mov	r24, r10
 526:	86 78       	andi	r24, 0x86	; 134
 528:	59 f0       	breq	.+22     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 52a:	a1 fe       	sbrs	r10, 1
 52c:	02 c0       	rjmp	.+4      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 52e:	8b e2       	ldi	r24, 0x2B	; 43
 530:	01 c0       	rjmp	.+2      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 532:	80 e2       	ldi	r24, 0x20	; 32
 534:	a7 fc       	sbrc	r10, 7
 536:	8d e2       	ldi	r24, 0x2D	; 45
 538:	b6 01       	movw	r22, r12
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 540:	89 14       	cp	r8, r9
 542:	38 f4       	brcc	.+14     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 544:	b6 01       	movw	r22, r12
 546:	80 e3       	ldi	r24, 0x30	; 48
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 54e:	9a 94       	dec	r9
 550:	f7 cf       	rjmp	.-18     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 552:	8a 94       	dec	r8
 554:	f3 01       	movw	r30, r6
 556:	e8 0d       	add	r30, r8
 558:	f1 1d       	adc	r31, r1
 55a:	80 81       	ld	r24, Z
 55c:	b6 01       	movw	r22, r12
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 564:	81 10       	cpse	r8, r1
 566:	f5 cf       	rjmp	.-22     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 568:	22 20       	and	r2, r2
 56a:	09 f4       	brne	.+2      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56c:	42 ce       	rjmp	.-892    	; 0x1f2 <vfprintf+0x24>
 56e:	b6 01       	movw	r22, r12
 570:	80 e2       	ldi	r24, 0x20	; 32
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 de 02 	call	0x5bc	; 0x5bc <fputc>
 578:	2a 94       	dec	r2
 57a:	f6 cf       	rjmp	.-20     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 57c:	f6 01       	movw	r30, r12
 57e:	86 81       	ldd	r24, Z+6	; 0x06
 580:	97 81       	ldd	r25, Z+7	; 0x07
 582:	02 c0       	rjmp	.+4      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 584:	8f ef       	ldi	r24, 0xFF	; 255
 586:	9f ef       	ldi	r25, 0xFF	; 255
 588:	2b 96       	adiw	r28, 0x0b	; 11
 58a:	e2 e1       	ldi	r30, 0x12	; 18
 58c:	0c 94 94 03 	jmp	0x728	; 0x728 <__epilogue_restores__>

00000590 <strnlen_P>:
 590:	fc 01       	movw	r30, r24
 592:	05 90       	lpm	r0, Z+
 594:	61 50       	subi	r22, 0x01	; 1
 596:	70 40       	sbci	r23, 0x00	; 0
 598:	01 10       	cpse	r0, r1
 59a:	d8 f7       	brcc	.-10     	; 0x592 <strnlen_P+0x2>
 59c:	80 95       	com	r24
 59e:	90 95       	com	r25
 5a0:	8e 0f       	add	r24, r30
 5a2:	9f 1f       	adc	r25, r31
 5a4:	08 95       	ret

000005a6 <strnlen>:
 5a6:	fc 01       	movw	r30, r24
 5a8:	61 50       	subi	r22, 0x01	; 1
 5aa:	70 40       	sbci	r23, 0x00	; 0
 5ac:	01 90       	ld	r0, Z+
 5ae:	01 10       	cpse	r0, r1
 5b0:	d8 f7       	brcc	.-10     	; 0x5a8 <strnlen+0x2>
 5b2:	80 95       	com	r24
 5b4:	90 95       	com	r25
 5b6:	8e 0f       	add	r24, r30
 5b8:	9f 1f       	adc	r25, r31
 5ba:	08 95       	ret

000005bc <fputc>:
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	fb 01       	movw	r30, r22
 5c6:	23 81       	ldd	r18, Z+3	; 0x03
 5c8:	21 fd       	sbrc	r18, 1
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <fputc+0x16>
 5cc:	8f ef       	ldi	r24, 0xFF	; 255
 5ce:	9f ef       	ldi	r25, 0xFF	; 255
 5d0:	2c c0       	rjmp	.+88     	; 0x62a <fputc+0x6e>
 5d2:	22 ff       	sbrs	r18, 2
 5d4:	16 c0       	rjmp	.+44     	; 0x602 <fputc+0x46>
 5d6:	46 81       	ldd	r20, Z+6	; 0x06
 5d8:	57 81       	ldd	r21, Z+7	; 0x07
 5da:	24 81       	ldd	r18, Z+4	; 0x04
 5dc:	35 81       	ldd	r19, Z+5	; 0x05
 5de:	42 17       	cp	r20, r18
 5e0:	53 07       	cpc	r21, r19
 5e2:	44 f4       	brge	.+16     	; 0x5f4 <fputc+0x38>
 5e4:	a0 81       	ld	r26, Z
 5e6:	b1 81       	ldd	r27, Z+1	; 0x01
 5e8:	9d 01       	movw	r18, r26
 5ea:	2f 5f       	subi	r18, 0xFF	; 255
 5ec:	3f 4f       	sbci	r19, 0xFF	; 255
 5ee:	31 83       	std	Z+1, r19	; 0x01
 5f0:	20 83       	st	Z, r18
 5f2:	8c 93       	st	X, r24
 5f4:	26 81       	ldd	r18, Z+6	; 0x06
 5f6:	37 81       	ldd	r19, Z+7	; 0x07
 5f8:	2f 5f       	subi	r18, 0xFF	; 255
 5fa:	3f 4f       	sbci	r19, 0xFF	; 255
 5fc:	37 83       	std	Z+7, r19	; 0x07
 5fe:	26 83       	std	Z+6, r18	; 0x06
 600:	14 c0       	rjmp	.+40     	; 0x62a <fputc+0x6e>
 602:	8b 01       	movw	r16, r22
 604:	ec 01       	movw	r28, r24
 606:	fb 01       	movw	r30, r22
 608:	00 84       	ldd	r0, Z+8	; 0x08
 60a:	f1 85       	ldd	r31, Z+9	; 0x09
 60c:	e0 2d       	mov	r30, r0
 60e:	09 95       	icall
 610:	89 2b       	or	r24, r25
 612:	e1 f6       	brne	.-72     	; 0x5cc <fputc+0x10>
 614:	d8 01       	movw	r26, r16
 616:	16 96       	adiw	r26, 0x06	; 6
 618:	8d 91       	ld	r24, X+
 61a:	9c 91       	ld	r25, X
 61c:	17 97       	sbiw	r26, 0x07	; 7
 61e:	01 96       	adiw	r24, 0x01	; 1
 620:	17 96       	adiw	r26, 0x07	; 7
 622:	9c 93       	st	X, r25
 624:	8e 93       	st	-X, r24
 626:	16 97       	sbiw	r26, 0x06	; 6
 628:	ce 01       	movw	r24, r28
 62a:	df 91       	pop	r29
 62c:	cf 91       	pop	r28
 62e:	1f 91       	pop	r17
 630:	0f 91       	pop	r16
 632:	08 95       	ret

00000634 <__ultoa_invert>:
 634:	fa 01       	movw	r30, r20
 636:	aa 27       	eor	r26, r26
 638:	28 30       	cpi	r18, 0x08	; 8
 63a:	51 f1       	breq	.+84     	; 0x690 <__ultoa_invert+0x5c>
 63c:	20 31       	cpi	r18, 0x10	; 16
 63e:	81 f1       	breq	.+96     	; 0x6a0 <__ultoa_invert+0x6c>
 640:	e8 94       	clt
 642:	6f 93       	push	r22
 644:	6e 7f       	andi	r22, 0xFE	; 254
 646:	6e 5f       	subi	r22, 0xFE	; 254
 648:	7f 4f       	sbci	r23, 0xFF	; 255
 64a:	8f 4f       	sbci	r24, 0xFF	; 255
 64c:	9f 4f       	sbci	r25, 0xFF	; 255
 64e:	af 4f       	sbci	r26, 0xFF	; 255
 650:	b1 e0       	ldi	r27, 0x01	; 1
 652:	3e d0       	rcall	.+124    	; 0x6d0 <__ultoa_invert+0x9c>
 654:	b4 e0       	ldi	r27, 0x04	; 4
 656:	3c d0       	rcall	.+120    	; 0x6d0 <__ultoa_invert+0x9c>
 658:	67 0f       	add	r22, r23
 65a:	78 1f       	adc	r23, r24
 65c:	89 1f       	adc	r24, r25
 65e:	9a 1f       	adc	r25, r26
 660:	a1 1d       	adc	r26, r1
 662:	68 0f       	add	r22, r24
 664:	79 1f       	adc	r23, r25
 666:	8a 1f       	adc	r24, r26
 668:	91 1d       	adc	r25, r1
 66a:	a1 1d       	adc	r26, r1
 66c:	6a 0f       	add	r22, r26
 66e:	71 1d       	adc	r23, r1
 670:	81 1d       	adc	r24, r1
 672:	91 1d       	adc	r25, r1
 674:	a1 1d       	adc	r26, r1
 676:	20 d0       	rcall	.+64     	; 0x6b8 <__ultoa_invert+0x84>
 678:	09 f4       	brne	.+2      	; 0x67c <__ultoa_invert+0x48>
 67a:	68 94       	set
 67c:	3f 91       	pop	r19
 67e:	2a e0       	ldi	r18, 0x0A	; 10
 680:	26 9f       	mul	r18, r22
 682:	11 24       	eor	r1, r1
 684:	30 19       	sub	r19, r0
 686:	30 5d       	subi	r19, 0xD0	; 208
 688:	31 93       	st	Z+, r19
 68a:	de f6       	brtc	.-74     	; 0x642 <__ultoa_invert+0xe>
 68c:	cf 01       	movw	r24, r30
 68e:	08 95       	ret
 690:	46 2f       	mov	r20, r22
 692:	47 70       	andi	r20, 0x07	; 7
 694:	40 5d       	subi	r20, 0xD0	; 208
 696:	41 93       	st	Z+, r20
 698:	b3 e0       	ldi	r27, 0x03	; 3
 69a:	0f d0       	rcall	.+30     	; 0x6ba <__ultoa_invert+0x86>
 69c:	c9 f7       	brne	.-14     	; 0x690 <__ultoa_invert+0x5c>
 69e:	f6 cf       	rjmp	.-20     	; 0x68c <__ultoa_invert+0x58>
 6a0:	46 2f       	mov	r20, r22
 6a2:	4f 70       	andi	r20, 0x0F	; 15
 6a4:	40 5d       	subi	r20, 0xD0	; 208
 6a6:	4a 33       	cpi	r20, 0x3A	; 58
 6a8:	18 f0       	brcs	.+6      	; 0x6b0 <__ultoa_invert+0x7c>
 6aa:	49 5d       	subi	r20, 0xD9	; 217
 6ac:	31 fd       	sbrc	r19, 1
 6ae:	40 52       	subi	r20, 0x20	; 32
 6b0:	41 93       	st	Z+, r20
 6b2:	02 d0       	rcall	.+4      	; 0x6b8 <__ultoa_invert+0x84>
 6b4:	a9 f7       	brne	.-22     	; 0x6a0 <__ultoa_invert+0x6c>
 6b6:	ea cf       	rjmp	.-44     	; 0x68c <__ultoa_invert+0x58>
 6b8:	b4 e0       	ldi	r27, 0x04	; 4
 6ba:	a6 95       	lsr	r26
 6bc:	97 95       	ror	r25
 6be:	87 95       	ror	r24
 6c0:	77 95       	ror	r23
 6c2:	67 95       	ror	r22
 6c4:	ba 95       	dec	r27
 6c6:	c9 f7       	brne	.-14     	; 0x6ba <__ultoa_invert+0x86>
 6c8:	00 97       	sbiw	r24, 0x00	; 0
 6ca:	61 05       	cpc	r22, r1
 6cc:	71 05       	cpc	r23, r1
 6ce:	08 95       	ret
 6d0:	9b 01       	movw	r18, r22
 6d2:	ac 01       	movw	r20, r24
 6d4:	0a 2e       	mov	r0, r26
 6d6:	06 94       	lsr	r0
 6d8:	57 95       	ror	r21
 6da:	47 95       	ror	r20
 6dc:	37 95       	ror	r19
 6de:	27 95       	ror	r18
 6e0:	ba 95       	dec	r27
 6e2:	c9 f7       	brne	.-14     	; 0x6d6 <__ultoa_invert+0xa2>
 6e4:	62 0f       	add	r22, r18
 6e6:	73 1f       	adc	r23, r19
 6e8:	84 1f       	adc	r24, r20
 6ea:	95 1f       	adc	r25, r21
 6ec:	a0 1d       	adc	r26, r0
 6ee:	08 95       	ret

000006f0 <__prologue_saves__>:
 6f0:	2f 92       	push	r2
 6f2:	3f 92       	push	r3
 6f4:	4f 92       	push	r4
 6f6:	5f 92       	push	r5
 6f8:	6f 92       	push	r6
 6fa:	7f 92       	push	r7
 6fc:	8f 92       	push	r8
 6fe:	9f 92       	push	r9
 700:	af 92       	push	r10
 702:	bf 92       	push	r11
 704:	cf 92       	push	r12
 706:	df 92       	push	r13
 708:	ef 92       	push	r14
 70a:	ff 92       	push	r15
 70c:	0f 93       	push	r16
 70e:	1f 93       	push	r17
 710:	cf 93       	push	r28
 712:	df 93       	push	r29
 714:	cd b7       	in	r28, 0x3d	; 61
 716:	de b7       	in	r29, 0x3e	; 62
 718:	ca 1b       	sub	r28, r26
 71a:	db 0b       	sbc	r29, r27
 71c:	0f b6       	in	r0, 0x3f	; 63
 71e:	f8 94       	cli
 720:	de bf       	out	0x3e, r29	; 62
 722:	0f be       	out	0x3f, r0	; 63
 724:	cd bf       	out	0x3d, r28	; 61
 726:	09 94       	ijmp

00000728 <__epilogue_restores__>:
 728:	2a 88       	ldd	r2, Y+18	; 0x12
 72a:	39 88       	ldd	r3, Y+17	; 0x11
 72c:	48 88       	ldd	r4, Y+16	; 0x10
 72e:	5f 84       	ldd	r5, Y+15	; 0x0f
 730:	6e 84       	ldd	r6, Y+14	; 0x0e
 732:	7d 84       	ldd	r7, Y+13	; 0x0d
 734:	8c 84       	ldd	r8, Y+12	; 0x0c
 736:	9b 84       	ldd	r9, Y+11	; 0x0b
 738:	aa 84       	ldd	r10, Y+10	; 0x0a
 73a:	b9 84       	ldd	r11, Y+9	; 0x09
 73c:	c8 84       	ldd	r12, Y+8	; 0x08
 73e:	df 80       	ldd	r13, Y+7	; 0x07
 740:	ee 80       	ldd	r14, Y+6	; 0x06
 742:	fd 80       	ldd	r15, Y+5	; 0x05
 744:	0c 81       	ldd	r16, Y+4	; 0x04
 746:	1b 81       	ldd	r17, Y+3	; 0x03
 748:	aa 81       	ldd	r26, Y+2	; 0x02
 74a:	b9 81       	ldd	r27, Y+1	; 0x01
 74c:	ce 0f       	add	r28, r30
 74e:	d1 1d       	adc	r29, r1
 750:	0f b6       	in	r0, 0x3f	; 63
 752:	f8 94       	cli
 754:	de bf       	out	0x3e, r29	; 62
 756:	0f be       	out	0x3f, r0	; 63
 758:	cd bf       	out	0x3d, r28	; 61
 75a:	ed 01       	movw	r28, r26
 75c:	08 95       	ret

0000075e <_exit>:
 75e:	f8 94       	cli

00000760 <__stop_program>:
 760:	ff cf       	rjmp	.-2      	; 0x760 <__stop_program>
