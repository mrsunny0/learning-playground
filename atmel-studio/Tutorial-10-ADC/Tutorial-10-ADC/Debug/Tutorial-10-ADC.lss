
Tutorial-10-ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000077c  000007f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000077c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000850  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000094d  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000816  00000000  00000000  00001255  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000455  00000000  00000000  00001a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00001ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043f  00000000  00000000  00001f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000011d  00000000  00000000  000023d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000024f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e7       	ldi	r30, 0x7C	; 124
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 6f 00 	call	0xde	; 0xde <main>
  8e:	0c 94 bc 03 	jmp	0x778	; 0x778 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <initADC>:
	// return register value
	return ADC;
}

void setup() 
{
  96:	ec e7       	ldi	r30, 0x7C	; 124
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	80 64       	ori	r24, 0x40	; 64
  9e:	80 83       	st	Z, r24
  a0:	ea e7       	ldi	r30, 0x7A	; 122
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	80 81       	ld	r24, Z
  a6:	87 60       	ori	r24, 0x07	; 7
  a8:	80 83       	st	Z, r24
  aa:	80 81       	ld	r24, Z
  ac:	80 68       	ori	r24, 0x80	; 128
  ae:	80 83       	st	Z, r24
  b0:	08 95       	ret

000000b2 <readADCChannel>:
  b2:	ec e7       	ldi	r30, 0x7C	; 124
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	90 81       	ld	r25, Z
  b8:	98 7f       	andi	r25, 0xF8	; 248
  ba:	90 83       	st	Z, r25
  bc:	90 81       	ld	r25, Z
  be:	87 70       	andi	r24, 0x07	; 7
  c0:	98 2b       	or	r25, r24
  c2:	90 83       	st	Z, r25
  c4:	ea e7       	ldi	r30, 0x7A	; 122
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	80 64       	ori	r24, 0x40	; 64
  cc:	80 83       	st	Z, r24
  ce:	80 81       	ld	r24, Z
  d0:	86 fd       	sbrc	r24, 6
  d2:	fd cf       	rjmp	.-6      	; 0xce <readADCChannel+0x1c>
  d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
  d8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
  dc:	08 95       	ret

000000de <main>:
	
}

int main(void)
{
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	de b7       	in	r29, 0x3e	; 62
  e6:	2a 97       	sbiw	r28, 0x0a	; 10
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	f8 94       	cli
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	cd bf       	out	0x3d, r28	; 61
	initUART();
  f2:	0e 94 a7 00 	call	0x14e	; 0x14e <initUART>
	initADC();
  f6:	0e 94 4b 00 	call	0x96	; 0x96 <initADC>
    {
		// read data
		data = readADCChannel(0);

		// convert data
		sprintf(buffer, "%d", data);
  fa:	0f 2e       	mov	r0, r31
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	ef 2e       	mov	r14, r31
 100:	f1 e0       	ldi	r31, 0x01	; 1
 102:	ff 2e       	mov	r15, r31
 104:	f0 2d       	mov	r31, r0
 106:	8e 01       	movw	r16, r28
 108:	0f 5f       	subi	r16, 0xFF	; 255
 10a:	1f 4f       	sbci	r17, 0xFF	; 255
	char buffer[10];
	
    while (1) 
    {
		// read data
		data = readADCChannel(0);
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	0e 94 59 00 	call	0xb2	; 0xb2 <readADCChannel>

		// convert data
		sprintf(buffer, "%d", data);
 112:	9f 93       	push	r25
 114:	8f 93       	push	r24
 116:	ff 92       	push	r15
 118:	ef 92       	push	r14
 11a:	1f 93       	push	r17
 11c:	0f 93       	push	r16
 11e:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <sprintf>
		sendString(buffer);
 122:	c8 01       	movw	r24, r16
 124:	0e 94 c3 00 	call	0x186	; 0x186 <sendString>
		sendChar('\n');
 128:	8a e0       	ldi	r24, 0x0A	; 10
 12a:	0e 94 bb 00 	call	0x176	; 0x176 <sendChar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	83 ed       	ldi	r24, 0xD3	; 211
 132:	90 e3       	ldi	r25, 0x30	; 48
 134:	21 50       	subi	r18, 0x01	; 1
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	90 40       	sbci	r25, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0x56>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0x60>
 13e:	00 00       	nop
 140:	0f 90       	pop	r0
 142:	0f 90       	pop	r0
 144:	0f 90       	pop	r0
 146:	0f 90       	pop	r0
 148:	0f 90       	pop	r0
 14a:	0f 90       	pop	r0
 14c:	df cf       	rjmp	.-66     	; 0x10c <main+0x2e>

0000014e <initUART>:

#include <avr/io.h>
#include "UART.h"

void initUART() {
	UBRR0L = 103; // check 24.11, examples of baud rate settings, table does the math for you
 14e:	87 e6       	ldi	r24, 0x67	; 103
 150:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B |= (1<<TXEN0); // set status of bit
 154:	e1 ec       	ldi	r30, 0xC1	; 193
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	80 81       	ld	r24, Z
 15a:	88 60       	ori	r24, 0x08	; 8
 15c:	80 83       	st	Z, r24
	UCSR0B |= (1<<RXEN0); // receive enable bit
 15e:	80 81       	ld	r24, Z
 160:	80 61       	ori	r24, 0x10	; 16
 162:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ00) | (1<<UCSZ01); // 1 bit of data per transfer 24.12.3
 164:	a2 ec       	ldi	r26, 0xC2	; 194
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	8c 91       	ld	r24, X
 16a:	86 60       	ori	r24, 0x06	; 6
 16c:	8c 93       	st	X, r24
	
	// enabling interrupt
	UCSR0B |= (1 << RXCIE0); // Enable the USART receive Complete interrupt (USART_RXC)
 16e:	80 81       	ld	r24, Z
 170:	80 68       	ori	r24, 0x80	; 128
 172:	80 83       	st	Z, r24
 174:	08 95       	ret

00000176 <sendChar>:
}

void sendChar(char data) {
	while(!(UCSR0A & (1<<UDRE0)));
 176:	e0 ec       	ldi	r30, 0xC0	; 192
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	90 81       	ld	r25, Z
 17c:	95 ff       	sbrs	r25, 5
 17e:	fd cf       	rjmp	.-6      	; 0x17a <sendChar+0x4>
	UDR0 = data;
 180:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 184:	08 95       	ret

00000186 <sendString>:
}

void sendString(char* data) {
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ec 01       	movw	r28, r24
	while(*data) {
 18c:	88 81       	ld	r24, Y
 18e:	88 23       	and	r24, r24
 190:	31 f0       	breq	.+12     	; 0x19e <sendString+0x18>
 192:	21 96       	adiw	r28, 0x01	; 1
		sendChar(*data); // access content of pointer
 194:	0e 94 bb 00 	call	0x176	; 0x176 <sendChar>
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}

void sendString(char* data) {
	while(*data) {
 198:	89 91       	ld	r24, Y+
 19a:	81 11       	cpse	r24, r1
 19c:	fb cf       	rjmp	.-10     	; 0x194 <sendString+0xe>
		sendChar(*data); // access content of pointer
		data++; // access next character in memory
	}
}
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <sprintf>:
 1a4:	ae e0       	ldi	r26, 0x0E	; 14
 1a6:	b0 e0       	ldi	r27, 0x00	; 0
 1a8:	e8 ed       	ldi	r30, 0xD8	; 216
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	0c 94 93 03 	jmp	0x726	; 0x726 <__prologue_saves__+0x1c>
 1b0:	0d 89       	ldd	r16, Y+21	; 0x15
 1b2:	1e 89       	ldd	r17, Y+22	; 0x16
 1b4:	86 e0       	ldi	r24, 0x06	; 6
 1b6:	8c 83       	std	Y+4, r24	; 0x04
 1b8:	1a 83       	std	Y+2, r17	; 0x02
 1ba:	09 83       	std	Y+1, r16	; 0x01
 1bc:	8f ef       	ldi	r24, 0xFF	; 255
 1be:	9f e7       	ldi	r25, 0x7F	; 127
 1c0:	9e 83       	std	Y+6, r25	; 0x06
 1c2:	8d 83       	std	Y+5, r24	; 0x05
 1c4:	ae 01       	movw	r20, r28
 1c6:	47 5e       	subi	r20, 0xE7	; 231
 1c8:	5f 4f       	sbci	r21, 0xFF	; 255
 1ca:	6f 89       	ldd	r22, Y+23	; 0x17
 1cc:	78 8d       	ldd	r23, Y+24	; 0x18
 1ce:	ce 01       	movw	r24, r28
 1d0:	01 96       	adiw	r24, 0x01	; 1
 1d2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <vfprintf>
 1d6:	ef 81       	ldd	r30, Y+7	; 0x07
 1d8:	f8 85       	ldd	r31, Y+8	; 0x08
 1da:	e0 0f       	add	r30, r16
 1dc:	f1 1f       	adc	r31, r17
 1de:	10 82       	st	Z, r1
 1e0:	2e 96       	adiw	r28, 0x0e	; 14
 1e2:	e4 e0       	ldi	r30, 0x04	; 4
 1e4:	0c 94 af 03 	jmp	0x75e	; 0x75e <__epilogue_restores__+0x1c>

000001e8 <vfprintf>:
 1e8:	ab e0       	ldi	r26, 0x0B	; 11
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	ea ef       	ldi	r30, 0xFA	; 250
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	0c 94 85 03 	jmp	0x70a	; 0x70a <__prologue_saves__>
 1f4:	6c 01       	movw	r12, r24
 1f6:	7b 01       	movw	r14, r22
 1f8:	8a 01       	movw	r16, r20
 1fa:	fc 01       	movw	r30, r24
 1fc:	17 82       	std	Z+7, r1	; 0x07
 1fe:	16 82       	std	Z+6, r1	; 0x06
 200:	83 81       	ldd	r24, Z+3	; 0x03
 202:	81 ff       	sbrs	r24, 1
 204:	cc c1       	rjmp	.+920    	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 206:	ce 01       	movw	r24, r28
 208:	01 96       	adiw	r24, 0x01	; 1
 20a:	3c 01       	movw	r6, r24
 20c:	f6 01       	movw	r30, r12
 20e:	93 81       	ldd	r25, Z+3	; 0x03
 210:	f7 01       	movw	r30, r14
 212:	93 fd       	sbrc	r25, 3
 214:	85 91       	lpm	r24, Z+
 216:	93 ff       	sbrs	r25, 3
 218:	81 91       	ld	r24, Z+
 21a:	7f 01       	movw	r14, r30
 21c:	88 23       	and	r24, r24
 21e:	09 f4       	brne	.+2      	; 0x222 <vfprintf+0x3a>
 220:	ba c1       	rjmp	.+884    	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 222:	85 32       	cpi	r24, 0x25	; 37
 224:	39 f4       	brne	.+14     	; 0x234 <vfprintf+0x4c>
 226:	93 fd       	sbrc	r25, 3
 228:	85 91       	lpm	r24, Z+
 22a:	93 ff       	sbrs	r25, 3
 22c:	81 91       	ld	r24, Z+
 22e:	7f 01       	movw	r14, r30
 230:	85 32       	cpi	r24, 0x25	; 37
 232:	29 f4       	brne	.+10     	; 0x23e <vfprintf+0x56>
 234:	b6 01       	movw	r22, r12
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 23c:	e7 cf       	rjmp	.-50     	; 0x20c <vfprintf+0x24>
 23e:	91 2c       	mov	r9, r1
 240:	21 2c       	mov	r2, r1
 242:	31 2c       	mov	r3, r1
 244:	ff e1       	ldi	r31, 0x1F	; 31
 246:	f3 15       	cp	r31, r3
 248:	d8 f0       	brcs	.+54     	; 0x280 <vfprintf+0x98>
 24a:	8b 32       	cpi	r24, 0x2B	; 43
 24c:	79 f0       	breq	.+30     	; 0x26c <vfprintf+0x84>
 24e:	38 f4       	brcc	.+14     	; 0x25e <vfprintf+0x76>
 250:	80 32       	cpi	r24, 0x20	; 32
 252:	79 f0       	breq	.+30     	; 0x272 <vfprintf+0x8a>
 254:	83 32       	cpi	r24, 0x23	; 35
 256:	a1 f4       	brne	.+40     	; 0x280 <vfprintf+0x98>
 258:	23 2d       	mov	r18, r3
 25a:	20 61       	ori	r18, 0x10	; 16
 25c:	1d c0       	rjmp	.+58     	; 0x298 <vfprintf+0xb0>
 25e:	8d 32       	cpi	r24, 0x2D	; 45
 260:	61 f0       	breq	.+24     	; 0x27a <vfprintf+0x92>
 262:	80 33       	cpi	r24, 0x30	; 48
 264:	69 f4       	brne	.+26     	; 0x280 <vfprintf+0x98>
 266:	23 2d       	mov	r18, r3
 268:	21 60       	ori	r18, 0x01	; 1
 26a:	16 c0       	rjmp	.+44     	; 0x298 <vfprintf+0xb0>
 26c:	83 2d       	mov	r24, r3
 26e:	82 60       	ori	r24, 0x02	; 2
 270:	38 2e       	mov	r3, r24
 272:	e3 2d       	mov	r30, r3
 274:	e4 60       	ori	r30, 0x04	; 4
 276:	3e 2e       	mov	r3, r30
 278:	2a c0       	rjmp	.+84     	; 0x2ce <vfprintf+0xe6>
 27a:	f3 2d       	mov	r31, r3
 27c:	f8 60       	ori	r31, 0x08	; 8
 27e:	1d c0       	rjmp	.+58     	; 0x2ba <vfprintf+0xd2>
 280:	37 fc       	sbrc	r3, 7
 282:	2d c0       	rjmp	.+90     	; 0x2de <vfprintf+0xf6>
 284:	20 ed       	ldi	r18, 0xD0	; 208
 286:	28 0f       	add	r18, r24
 288:	2a 30       	cpi	r18, 0x0A	; 10
 28a:	40 f0       	brcs	.+16     	; 0x29c <vfprintf+0xb4>
 28c:	8e 32       	cpi	r24, 0x2E	; 46
 28e:	b9 f4       	brne	.+46     	; 0x2be <vfprintf+0xd6>
 290:	36 fc       	sbrc	r3, 6
 292:	81 c1       	rjmp	.+770    	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 294:	23 2d       	mov	r18, r3
 296:	20 64       	ori	r18, 0x40	; 64
 298:	32 2e       	mov	r3, r18
 29a:	19 c0       	rjmp	.+50     	; 0x2ce <vfprintf+0xe6>
 29c:	36 fe       	sbrs	r3, 6
 29e:	06 c0       	rjmp	.+12     	; 0x2ac <vfprintf+0xc4>
 2a0:	8a e0       	ldi	r24, 0x0A	; 10
 2a2:	98 9e       	mul	r9, r24
 2a4:	20 0d       	add	r18, r0
 2a6:	11 24       	eor	r1, r1
 2a8:	92 2e       	mov	r9, r18
 2aa:	11 c0       	rjmp	.+34     	; 0x2ce <vfprintf+0xe6>
 2ac:	ea e0       	ldi	r30, 0x0A	; 10
 2ae:	2e 9e       	mul	r2, r30
 2b0:	20 0d       	add	r18, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	22 2e       	mov	r2, r18
 2b6:	f3 2d       	mov	r31, r3
 2b8:	f0 62       	ori	r31, 0x20	; 32
 2ba:	3f 2e       	mov	r3, r31
 2bc:	08 c0       	rjmp	.+16     	; 0x2ce <vfprintf+0xe6>
 2be:	8c 36       	cpi	r24, 0x6C	; 108
 2c0:	21 f4       	brne	.+8      	; 0x2ca <vfprintf+0xe2>
 2c2:	83 2d       	mov	r24, r3
 2c4:	80 68       	ori	r24, 0x80	; 128
 2c6:	38 2e       	mov	r3, r24
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <vfprintf+0xe6>
 2ca:	88 36       	cpi	r24, 0x68	; 104
 2cc:	41 f4       	brne	.+16     	; 0x2de <vfprintf+0xf6>
 2ce:	f7 01       	movw	r30, r14
 2d0:	93 fd       	sbrc	r25, 3
 2d2:	85 91       	lpm	r24, Z+
 2d4:	93 ff       	sbrs	r25, 3
 2d6:	81 91       	ld	r24, Z+
 2d8:	7f 01       	movw	r14, r30
 2da:	81 11       	cpse	r24, r1
 2dc:	b3 cf       	rjmp	.-154    	; 0x244 <vfprintf+0x5c>
 2de:	98 2f       	mov	r25, r24
 2e0:	9f 7d       	andi	r25, 0xDF	; 223
 2e2:	95 54       	subi	r25, 0x45	; 69
 2e4:	93 30       	cpi	r25, 0x03	; 3
 2e6:	28 f4       	brcc	.+10     	; 0x2f2 <vfprintf+0x10a>
 2e8:	0c 5f       	subi	r16, 0xFC	; 252
 2ea:	1f 4f       	sbci	r17, 0xFF	; 255
 2ec:	9f e3       	ldi	r25, 0x3F	; 63
 2ee:	99 83       	std	Y+1, r25	; 0x01
 2f0:	0d c0       	rjmp	.+26     	; 0x30c <vfprintf+0x124>
 2f2:	83 36       	cpi	r24, 0x63	; 99
 2f4:	31 f0       	breq	.+12     	; 0x302 <vfprintf+0x11a>
 2f6:	83 37       	cpi	r24, 0x73	; 115
 2f8:	71 f0       	breq	.+28     	; 0x316 <vfprintf+0x12e>
 2fa:	83 35       	cpi	r24, 0x53	; 83
 2fc:	09 f0       	breq	.+2      	; 0x300 <vfprintf+0x118>
 2fe:	59 c0       	rjmp	.+178    	; 0x3b2 <vfprintf+0x1ca>
 300:	21 c0       	rjmp	.+66     	; 0x344 <vfprintf+0x15c>
 302:	f8 01       	movw	r30, r16
 304:	80 81       	ld	r24, Z
 306:	89 83       	std	Y+1, r24	; 0x01
 308:	0e 5f       	subi	r16, 0xFE	; 254
 30a:	1f 4f       	sbci	r17, 0xFF	; 255
 30c:	88 24       	eor	r8, r8
 30e:	83 94       	inc	r8
 310:	91 2c       	mov	r9, r1
 312:	53 01       	movw	r10, r6
 314:	13 c0       	rjmp	.+38     	; 0x33c <vfprintf+0x154>
 316:	28 01       	movw	r4, r16
 318:	f2 e0       	ldi	r31, 0x02	; 2
 31a:	4f 0e       	add	r4, r31
 31c:	51 1c       	adc	r5, r1
 31e:	f8 01       	movw	r30, r16
 320:	a0 80       	ld	r10, Z
 322:	b1 80       	ldd	r11, Z+1	; 0x01
 324:	36 fe       	sbrs	r3, 6
 326:	03 c0       	rjmp	.+6      	; 0x32e <vfprintf+0x146>
 328:	69 2d       	mov	r22, r9
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	02 c0       	rjmp	.+4      	; 0x332 <vfprintf+0x14a>
 32e:	6f ef       	ldi	r22, 0xFF	; 255
 330:	7f ef       	ldi	r23, 0xFF	; 255
 332:	c5 01       	movw	r24, r10
 334:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <strnlen>
 338:	4c 01       	movw	r8, r24
 33a:	82 01       	movw	r16, r4
 33c:	f3 2d       	mov	r31, r3
 33e:	ff 77       	andi	r31, 0x7F	; 127
 340:	3f 2e       	mov	r3, r31
 342:	16 c0       	rjmp	.+44     	; 0x370 <vfprintf+0x188>
 344:	28 01       	movw	r4, r16
 346:	22 e0       	ldi	r18, 0x02	; 2
 348:	42 0e       	add	r4, r18
 34a:	51 1c       	adc	r5, r1
 34c:	f8 01       	movw	r30, r16
 34e:	a0 80       	ld	r10, Z
 350:	b1 80       	ldd	r11, Z+1	; 0x01
 352:	36 fe       	sbrs	r3, 6
 354:	03 c0       	rjmp	.+6      	; 0x35c <vfprintf+0x174>
 356:	69 2d       	mov	r22, r9
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	02 c0       	rjmp	.+4      	; 0x360 <vfprintf+0x178>
 35c:	6f ef       	ldi	r22, 0xFF	; 255
 35e:	7f ef       	ldi	r23, 0xFF	; 255
 360:	c5 01       	movw	r24, r10
 362:	0e 94 d5 02 	call	0x5aa	; 0x5aa <strnlen_P>
 366:	4c 01       	movw	r8, r24
 368:	f3 2d       	mov	r31, r3
 36a:	f0 68       	ori	r31, 0x80	; 128
 36c:	3f 2e       	mov	r3, r31
 36e:	82 01       	movw	r16, r4
 370:	33 fc       	sbrc	r3, 3
 372:	1b c0       	rjmp	.+54     	; 0x3aa <vfprintf+0x1c2>
 374:	82 2d       	mov	r24, r2
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	88 16       	cp	r8, r24
 37a:	99 06       	cpc	r9, r25
 37c:	b0 f4       	brcc	.+44     	; 0x3aa <vfprintf+0x1c2>
 37e:	b6 01       	movw	r22, r12
 380:	80 e2       	ldi	r24, 0x20	; 32
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 388:	2a 94       	dec	r2
 38a:	f4 cf       	rjmp	.-24     	; 0x374 <vfprintf+0x18c>
 38c:	f5 01       	movw	r30, r10
 38e:	37 fc       	sbrc	r3, 7
 390:	85 91       	lpm	r24, Z+
 392:	37 fe       	sbrs	r3, 7
 394:	81 91       	ld	r24, Z+
 396:	5f 01       	movw	r10, r30
 398:	b6 01       	movw	r22, r12
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 3a0:	21 10       	cpse	r2, r1
 3a2:	2a 94       	dec	r2
 3a4:	21 e0       	ldi	r18, 0x01	; 1
 3a6:	82 1a       	sub	r8, r18
 3a8:	91 08       	sbc	r9, r1
 3aa:	81 14       	cp	r8, r1
 3ac:	91 04       	cpc	r9, r1
 3ae:	71 f7       	brne	.-36     	; 0x38c <vfprintf+0x1a4>
 3b0:	e8 c0       	rjmp	.+464    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 3b2:	84 36       	cpi	r24, 0x64	; 100
 3b4:	11 f0       	breq	.+4      	; 0x3ba <vfprintf+0x1d2>
 3b6:	89 36       	cpi	r24, 0x69	; 105
 3b8:	41 f5       	brne	.+80     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ba:	f8 01       	movw	r30, r16
 3bc:	37 fe       	sbrs	r3, 7
 3be:	07 c0       	rjmp	.+14     	; 0x3ce <vfprintf+0x1e6>
 3c0:	60 81       	ld	r22, Z
 3c2:	71 81       	ldd	r23, Z+1	; 0x01
 3c4:	82 81       	ldd	r24, Z+2	; 0x02
 3c6:	93 81       	ldd	r25, Z+3	; 0x03
 3c8:	0c 5f       	subi	r16, 0xFC	; 252
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	08 c0       	rjmp	.+16     	; 0x3de <vfprintf+0x1f6>
 3ce:	60 81       	ld	r22, Z
 3d0:	71 81       	ldd	r23, Z+1	; 0x01
 3d2:	07 2e       	mov	r0, r23
 3d4:	00 0c       	add	r0, r0
 3d6:	88 0b       	sbc	r24, r24
 3d8:	99 0b       	sbc	r25, r25
 3da:	0e 5f       	subi	r16, 0xFE	; 254
 3dc:	1f 4f       	sbci	r17, 0xFF	; 255
 3de:	f3 2d       	mov	r31, r3
 3e0:	ff 76       	andi	r31, 0x6F	; 111
 3e2:	3f 2e       	mov	r3, r31
 3e4:	97 ff       	sbrs	r25, 7
 3e6:	09 c0       	rjmp	.+18     	; 0x3fa <vfprintf+0x212>
 3e8:	90 95       	com	r25
 3ea:	80 95       	com	r24
 3ec:	70 95       	com	r23
 3ee:	61 95       	neg	r22
 3f0:	7f 4f       	sbci	r23, 0xFF	; 255
 3f2:	8f 4f       	sbci	r24, 0xFF	; 255
 3f4:	9f 4f       	sbci	r25, 0xFF	; 255
 3f6:	f0 68       	ori	r31, 0x80	; 128
 3f8:	3f 2e       	mov	r3, r31
 3fa:	2a e0       	ldi	r18, 0x0A	; 10
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	a3 01       	movw	r20, r6
 400:	0e 94 27 03 	call	0x64e	; 0x64e <__ultoa_invert>
 404:	88 2e       	mov	r8, r24
 406:	86 18       	sub	r8, r6
 408:	45 c0       	rjmp	.+138    	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 40a:	85 37       	cpi	r24, 0x75	; 117
 40c:	31 f4       	brne	.+12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40e:	23 2d       	mov	r18, r3
 410:	2f 7e       	andi	r18, 0xEF	; 239
 412:	b2 2e       	mov	r11, r18
 414:	2a e0       	ldi	r18, 0x0A	; 10
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	25 c0       	rjmp	.+74     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 41a:	93 2d       	mov	r25, r3
 41c:	99 7f       	andi	r25, 0xF9	; 249
 41e:	b9 2e       	mov	r11, r25
 420:	8f 36       	cpi	r24, 0x6F	; 111
 422:	c1 f0       	breq	.+48     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 424:	18 f4       	brcc	.+6      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 426:	88 35       	cpi	r24, 0x58	; 88
 428:	79 f0       	breq	.+30     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 42a:	b5 c0       	rjmp	.+362    	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 42c:	80 37       	cpi	r24, 0x70	; 112
 42e:	19 f0       	breq	.+6      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 430:	88 37       	cpi	r24, 0x78	; 120
 432:	21 f0       	breq	.+8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 434:	b0 c0       	rjmp	.+352    	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 436:	e9 2f       	mov	r30, r25
 438:	e0 61       	ori	r30, 0x10	; 16
 43a:	be 2e       	mov	r11, r30
 43c:	b4 fe       	sbrs	r11, 4
 43e:	0d c0       	rjmp	.+26     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 440:	fb 2d       	mov	r31, r11
 442:	f4 60       	ori	r31, 0x04	; 4
 444:	bf 2e       	mov	r11, r31
 446:	09 c0       	rjmp	.+18     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 448:	34 fe       	sbrs	r3, 4
 44a:	0a c0       	rjmp	.+20     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 44c:	29 2f       	mov	r18, r25
 44e:	26 60       	ori	r18, 0x06	; 6
 450:	b2 2e       	mov	r11, r18
 452:	06 c0       	rjmp	.+12     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 454:	28 e0       	ldi	r18, 0x08	; 8
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	05 c0       	rjmp	.+10     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45a:	20 e1       	ldi	r18, 0x10	; 16
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	02 c0       	rjmp	.+4      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 460:	20 e1       	ldi	r18, 0x10	; 16
 462:	32 e0       	ldi	r19, 0x02	; 2
 464:	f8 01       	movw	r30, r16
 466:	b7 fe       	sbrs	r11, 7
 468:	07 c0       	rjmp	.+14     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 46a:	60 81       	ld	r22, Z
 46c:	71 81       	ldd	r23, Z+1	; 0x01
 46e:	82 81       	ldd	r24, Z+2	; 0x02
 470:	93 81       	ldd	r25, Z+3	; 0x03
 472:	0c 5f       	subi	r16, 0xFC	; 252
 474:	1f 4f       	sbci	r17, 0xFF	; 255
 476:	06 c0       	rjmp	.+12     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 478:	60 81       	ld	r22, Z
 47a:	71 81       	ldd	r23, Z+1	; 0x01
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 5f       	subi	r16, 0xFE	; 254
 482:	1f 4f       	sbci	r17, 0xFF	; 255
 484:	a3 01       	movw	r20, r6
 486:	0e 94 27 03 	call	0x64e	; 0x64e <__ultoa_invert>
 48a:	88 2e       	mov	r8, r24
 48c:	86 18       	sub	r8, r6
 48e:	fb 2d       	mov	r31, r11
 490:	ff 77       	andi	r31, 0x7F	; 127
 492:	3f 2e       	mov	r3, r31
 494:	36 fe       	sbrs	r3, 6
 496:	0d c0       	rjmp	.+26     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 498:	23 2d       	mov	r18, r3
 49a:	2e 7f       	andi	r18, 0xFE	; 254
 49c:	a2 2e       	mov	r10, r18
 49e:	89 14       	cp	r8, r9
 4a0:	58 f4       	brcc	.+22     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4a2:	34 fe       	sbrs	r3, 4
 4a4:	0b c0       	rjmp	.+22     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4a6:	32 fc       	sbrc	r3, 2
 4a8:	09 c0       	rjmp	.+18     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4aa:	83 2d       	mov	r24, r3
 4ac:	8e 7e       	andi	r24, 0xEE	; 238
 4ae:	a8 2e       	mov	r10, r24
 4b0:	05 c0       	rjmp	.+10     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b2:	b8 2c       	mov	r11, r8
 4b4:	a3 2c       	mov	r10, r3
 4b6:	03 c0       	rjmp	.+6      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b8:	b8 2c       	mov	r11, r8
 4ba:	01 c0       	rjmp	.+2      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4bc:	b9 2c       	mov	r11, r9
 4be:	a4 fe       	sbrs	r10, 4
 4c0:	0f c0       	rjmp	.+30     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4c2:	fe 01       	movw	r30, r28
 4c4:	e8 0d       	add	r30, r8
 4c6:	f1 1d       	adc	r31, r1
 4c8:	80 81       	ld	r24, Z
 4ca:	80 33       	cpi	r24, 0x30	; 48
 4cc:	21 f4       	brne	.+8      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ce:	9a 2d       	mov	r25, r10
 4d0:	99 7e       	andi	r25, 0xE9	; 233
 4d2:	a9 2e       	mov	r10, r25
 4d4:	09 c0       	rjmp	.+18     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4d6:	a2 fe       	sbrs	r10, 2
 4d8:	06 c0       	rjmp	.+12     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4da:	b3 94       	inc	r11
 4dc:	b3 94       	inc	r11
 4de:	04 c0       	rjmp	.+8      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e0:	8a 2d       	mov	r24, r10
 4e2:	86 78       	andi	r24, 0x86	; 134
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e6:	b3 94       	inc	r11
 4e8:	a3 fc       	sbrc	r10, 3
 4ea:	11 c0       	rjmp	.+34     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4ec:	a0 fe       	sbrs	r10, 0
 4ee:	06 c0       	rjmp	.+12     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f0:	b2 14       	cp	r11, r2
 4f2:	88 f4       	brcc	.+34     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4f4:	28 0c       	add	r2, r8
 4f6:	92 2c       	mov	r9, r2
 4f8:	9b 18       	sub	r9, r11
 4fa:	0e c0       	rjmp	.+28     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4fc:	b2 14       	cp	r11, r2
 4fe:	60 f4       	brcc	.+24     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 500:	b6 01       	movw	r22, r12
 502:	80 e2       	ldi	r24, 0x20	; 32
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 50a:	b3 94       	inc	r11
 50c:	f7 cf       	rjmp	.-18     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 50e:	b2 14       	cp	r11, r2
 510:	18 f4       	brcc	.+6      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 512:	2b 18       	sub	r2, r11
 514:	02 c0       	rjmp	.+4      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 516:	98 2c       	mov	r9, r8
 518:	21 2c       	mov	r2, r1
 51a:	a4 fe       	sbrs	r10, 4
 51c:	10 c0       	rjmp	.+32     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 51e:	b6 01       	movw	r22, r12
 520:	80 e3       	ldi	r24, 0x30	; 48
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 528:	a2 fe       	sbrs	r10, 2
 52a:	17 c0       	rjmp	.+46     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 52c:	a1 fc       	sbrc	r10, 1
 52e:	03 c0       	rjmp	.+6      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 530:	88 e7       	ldi	r24, 0x78	; 120
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 536:	88 e5       	ldi	r24, 0x58	; 88
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	b6 01       	movw	r22, r12
 53c:	0c c0       	rjmp	.+24     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 53e:	8a 2d       	mov	r24, r10
 540:	86 78       	andi	r24, 0x86	; 134
 542:	59 f0       	breq	.+22     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 544:	a1 fe       	sbrs	r10, 1
 546:	02 c0       	rjmp	.+4      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 548:	8b e2       	ldi	r24, 0x2B	; 43
 54a:	01 c0       	rjmp	.+2      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54c:	80 e2       	ldi	r24, 0x20	; 32
 54e:	a7 fc       	sbrc	r10, 7
 550:	8d e2       	ldi	r24, 0x2D	; 45
 552:	b6 01       	movw	r22, r12
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 55a:	89 14       	cp	r8, r9
 55c:	38 f4       	brcc	.+14     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 55e:	b6 01       	movw	r22, r12
 560:	80 e3       	ldi	r24, 0x30	; 48
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 568:	9a 94       	dec	r9
 56a:	f7 cf       	rjmp	.-18     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 56c:	8a 94       	dec	r8
 56e:	f3 01       	movw	r30, r6
 570:	e8 0d       	add	r30, r8
 572:	f1 1d       	adc	r31, r1
 574:	80 81       	ld	r24, Z
 576:	b6 01       	movw	r22, r12
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 57e:	81 10       	cpse	r8, r1
 580:	f5 cf       	rjmp	.-22     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 582:	22 20       	and	r2, r2
 584:	09 f4       	brne	.+2      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 586:	42 ce       	rjmp	.-892    	; 0x20c <vfprintf+0x24>
 588:	b6 01       	movw	r22, r12
 58a:	80 e2       	ldi	r24, 0x20	; 32
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <fputc>
 592:	2a 94       	dec	r2
 594:	f6 cf       	rjmp	.-20     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 596:	f6 01       	movw	r30, r12
 598:	86 81       	ldd	r24, Z+6	; 0x06
 59a:	97 81       	ldd	r25, Z+7	; 0x07
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 59e:	8f ef       	ldi	r24, 0xFF	; 255
 5a0:	9f ef       	ldi	r25, 0xFF	; 255
 5a2:	2b 96       	adiw	r28, 0x0b	; 11
 5a4:	e2 e1       	ldi	r30, 0x12	; 18
 5a6:	0c 94 a1 03 	jmp	0x742	; 0x742 <__epilogue_restores__>

000005aa <strnlen_P>:
 5aa:	fc 01       	movw	r30, r24
 5ac:	05 90       	lpm	r0, Z+
 5ae:	61 50       	subi	r22, 0x01	; 1
 5b0:	70 40       	sbci	r23, 0x00	; 0
 5b2:	01 10       	cpse	r0, r1
 5b4:	d8 f7       	brcc	.-10     	; 0x5ac <strnlen_P+0x2>
 5b6:	80 95       	com	r24
 5b8:	90 95       	com	r25
 5ba:	8e 0f       	add	r24, r30
 5bc:	9f 1f       	adc	r25, r31
 5be:	08 95       	ret

000005c0 <strnlen>:
 5c0:	fc 01       	movw	r30, r24
 5c2:	61 50       	subi	r22, 0x01	; 1
 5c4:	70 40       	sbci	r23, 0x00	; 0
 5c6:	01 90       	ld	r0, Z+
 5c8:	01 10       	cpse	r0, r1
 5ca:	d8 f7       	brcc	.-10     	; 0x5c2 <strnlen+0x2>
 5cc:	80 95       	com	r24
 5ce:	90 95       	com	r25
 5d0:	8e 0f       	add	r24, r30
 5d2:	9f 1f       	adc	r25, r31
 5d4:	08 95       	ret

000005d6 <fputc>:
 5d6:	0f 93       	push	r16
 5d8:	1f 93       	push	r17
 5da:	cf 93       	push	r28
 5dc:	df 93       	push	r29
 5de:	fb 01       	movw	r30, r22
 5e0:	23 81       	ldd	r18, Z+3	; 0x03
 5e2:	21 fd       	sbrc	r18, 1
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <fputc+0x16>
 5e6:	8f ef       	ldi	r24, 0xFF	; 255
 5e8:	9f ef       	ldi	r25, 0xFF	; 255
 5ea:	2c c0       	rjmp	.+88     	; 0x644 <fputc+0x6e>
 5ec:	22 ff       	sbrs	r18, 2
 5ee:	16 c0       	rjmp	.+44     	; 0x61c <fputc+0x46>
 5f0:	46 81       	ldd	r20, Z+6	; 0x06
 5f2:	57 81       	ldd	r21, Z+7	; 0x07
 5f4:	24 81       	ldd	r18, Z+4	; 0x04
 5f6:	35 81       	ldd	r19, Z+5	; 0x05
 5f8:	42 17       	cp	r20, r18
 5fa:	53 07       	cpc	r21, r19
 5fc:	44 f4       	brge	.+16     	; 0x60e <fputc+0x38>
 5fe:	a0 81       	ld	r26, Z
 600:	b1 81       	ldd	r27, Z+1	; 0x01
 602:	9d 01       	movw	r18, r26
 604:	2f 5f       	subi	r18, 0xFF	; 255
 606:	3f 4f       	sbci	r19, 0xFF	; 255
 608:	31 83       	std	Z+1, r19	; 0x01
 60a:	20 83       	st	Z, r18
 60c:	8c 93       	st	X, r24
 60e:	26 81       	ldd	r18, Z+6	; 0x06
 610:	37 81       	ldd	r19, Z+7	; 0x07
 612:	2f 5f       	subi	r18, 0xFF	; 255
 614:	3f 4f       	sbci	r19, 0xFF	; 255
 616:	37 83       	std	Z+7, r19	; 0x07
 618:	26 83       	std	Z+6, r18	; 0x06
 61a:	14 c0       	rjmp	.+40     	; 0x644 <fputc+0x6e>
 61c:	8b 01       	movw	r16, r22
 61e:	ec 01       	movw	r28, r24
 620:	fb 01       	movw	r30, r22
 622:	00 84       	ldd	r0, Z+8	; 0x08
 624:	f1 85       	ldd	r31, Z+9	; 0x09
 626:	e0 2d       	mov	r30, r0
 628:	09 95       	icall
 62a:	89 2b       	or	r24, r25
 62c:	e1 f6       	brne	.-72     	; 0x5e6 <fputc+0x10>
 62e:	d8 01       	movw	r26, r16
 630:	16 96       	adiw	r26, 0x06	; 6
 632:	8d 91       	ld	r24, X+
 634:	9c 91       	ld	r25, X
 636:	17 97       	sbiw	r26, 0x07	; 7
 638:	01 96       	adiw	r24, 0x01	; 1
 63a:	17 96       	adiw	r26, 0x07	; 7
 63c:	9c 93       	st	X, r25
 63e:	8e 93       	st	-X, r24
 640:	16 97       	sbiw	r26, 0x06	; 6
 642:	ce 01       	movw	r24, r28
 644:	df 91       	pop	r29
 646:	cf 91       	pop	r28
 648:	1f 91       	pop	r17
 64a:	0f 91       	pop	r16
 64c:	08 95       	ret

0000064e <__ultoa_invert>:
 64e:	fa 01       	movw	r30, r20
 650:	aa 27       	eor	r26, r26
 652:	28 30       	cpi	r18, 0x08	; 8
 654:	51 f1       	breq	.+84     	; 0x6aa <__ultoa_invert+0x5c>
 656:	20 31       	cpi	r18, 0x10	; 16
 658:	81 f1       	breq	.+96     	; 0x6ba <__ultoa_invert+0x6c>
 65a:	e8 94       	clt
 65c:	6f 93       	push	r22
 65e:	6e 7f       	andi	r22, 0xFE	; 254
 660:	6e 5f       	subi	r22, 0xFE	; 254
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	af 4f       	sbci	r26, 0xFF	; 255
 66a:	b1 e0       	ldi	r27, 0x01	; 1
 66c:	3e d0       	rcall	.+124    	; 0x6ea <__ultoa_invert+0x9c>
 66e:	b4 e0       	ldi	r27, 0x04	; 4
 670:	3c d0       	rcall	.+120    	; 0x6ea <__ultoa_invert+0x9c>
 672:	67 0f       	add	r22, r23
 674:	78 1f       	adc	r23, r24
 676:	89 1f       	adc	r24, r25
 678:	9a 1f       	adc	r25, r26
 67a:	a1 1d       	adc	r26, r1
 67c:	68 0f       	add	r22, r24
 67e:	79 1f       	adc	r23, r25
 680:	8a 1f       	adc	r24, r26
 682:	91 1d       	adc	r25, r1
 684:	a1 1d       	adc	r26, r1
 686:	6a 0f       	add	r22, r26
 688:	71 1d       	adc	r23, r1
 68a:	81 1d       	adc	r24, r1
 68c:	91 1d       	adc	r25, r1
 68e:	a1 1d       	adc	r26, r1
 690:	20 d0       	rcall	.+64     	; 0x6d2 <__ultoa_invert+0x84>
 692:	09 f4       	brne	.+2      	; 0x696 <__ultoa_invert+0x48>
 694:	68 94       	set
 696:	3f 91       	pop	r19
 698:	2a e0       	ldi	r18, 0x0A	; 10
 69a:	26 9f       	mul	r18, r22
 69c:	11 24       	eor	r1, r1
 69e:	30 19       	sub	r19, r0
 6a0:	30 5d       	subi	r19, 0xD0	; 208
 6a2:	31 93       	st	Z+, r19
 6a4:	de f6       	brtc	.-74     	; 0x65c <__ultoa_invert+0xe>
 6a6:	cf 01       	movw	r24, r30
 6a8:	08 95       	ret
 6aa:	46 2f       	mov	r20, r22
 6ac:	47 70       	andi	r20, 0x07	; 7
 6ae:	40 5d       	subi	r20, 0xD0	; 208
 6b0:	41 93       	st	Z+, r20
 6b2:	b3 e0       	ldi	r27, 0x03	; 3
 6b4:	0f d0       	rcall	.+30     	; 0x6d4 <__ultoa_invert+0x86>
 6b6:	c9 f7       	brne	.-14     	; 0x6aa <__ultoa_invert+0x5c>
 6b8:	f6 cf       	rjmp	.-20     	; 0x6a6 <__ultoa_invert+0x58>
 6ba:	46 2f       	mov	r20, r22
 6bc:	4f 70       	andi	r20, 0x0F	; 15
 6be:	40 5d       	subi	r20, 0xD0	; 208
 6c0:	4a 33       	cpi	r20, 0x3A	; 58
 6c2:	18 f0       	brcs	.+6      	; 0x6ca <__ultoa_invert+0x7c>
 6c4:	49 5d       	subi	r20, 0xD9	; 217
 6c6:	31 fd       	sbrc	r19, 1
 6c8:	40 52       	subi	r20, 0x20	; 32
 6ca:	41 93       	st	Z+, r20
 6cc:	02 d0       	rcall	.+4      	; 0x6d2 <__ultoa_invert+0x84>
 6ce:	a9 f7       	brne	.-22     	; 0x6ba <__ultoa_invert+0x6c>
 6d0:	ea cf       	rjmp	.-44     	; 0x6a6 <__ultoa_invert+0x58>
 6d2:	b4 e0       	ldi	r27, 0x04	; 4
 6d4:	a6 95       	lsr	r26
 6d6:	97 95       	ror	r25
 6d8:	87 95       	ror	r24
 6da:	77 95       	ror	r23
 6dc:	67 95       	ror	r22
 6de:	ba 95       	dec	r27
 6e0:	c9 f7       	brne	.-14     	; 0x6d4 <__ultoa_invert+0x86>
 6e2:	00 97       	sbiw	r24, 0x00	; 0
 6e4:	61 05       	cpc	r22, r1
 6e6:	71 05       	cpc	r23, r1
 6e8:	08 95       	ret
 6ea:	9b 01       	movw	r18, r22
 6ec:	ac 01       	movw	r20, r24
 6ee:	0a 2e       	mov	r0, r26
 6f0:	06 94       	lsr	r0
 6f2:	57 95       	ror	r21
 6f4:	47 95       	ror	r20
 6f6:	37 95       	ror	r19
 6f8:	27 95       	ror	r18
 6fa:	ba 95       	dec	r27
 6fc:	c9 f7       	brne	.-14     	; 0x6f0 <__ultoa_invert+0xa2>
 6fe:	62 0f       	add	r22, r18
 700:	73 1f       	adc	r23, r19
 702:	84 1f       	adc	r24, r20
 704:	95 1f       	adc	r25, r21
 706:	a0 1d       	adc	r26, r0
 708:	08 95       	ret

0000070a <__prologue_saves__>:
 70a:	2f 92       	push	r2
 70c:	3f 92       	push	r3
 70e:	4f 92       	push	r4
 710:	5f 92       	push	r5
 712:	6f 92       	push	r6
 714:	7f 92       	push	r7
 716:	8f 92       	push	r8
 718:	9f 92       	push	r9
 71a:	af 92       	push	r10
 71c:	bf 92       	push	r11
 71e:	cf 92       	push	r12
 720:	df 92       	push	r13
 722:	ef 92       	push	r14
 724:	ff 92       	push	r15
 726:	0f 93       	push	r16
 728:	1f 93       	push	r17
 72a:	cf 93       	push	r28
 72c:	df 93       	push	r29
 72e:	cd b7       	in	r28, 0x3d	; 61
 730:	de b7       	in	r29, 0x3e	; 62
 732:	ca 1b       	sub	r28, r26
 734:	db 0b       	sbc	r29, r27
 736:	0f b6       	in	r0, 0x3f	; 63
 738:	f8 94       	cli
 73a:	de bf       	out	0x3e, r29	; 62
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	cd bf       	out	0x3d, r28	; 61
 740:	09 94       	ijmp

00000742 <__epilogue_restores__>:
 742:	2a 88       	ldd	r2, Y+18	; 0x12
 744:	39 88       	ldd	r3, Y+17	; 0x11
 746:	48 88       	ldd	r4, Y+16	; 0x10
 748:	5f 84       	ldd	r5, Y+15	; 0x0f
 74a:	6e 84       	ldd	r6, Y+14	; 0x0e
 74c:	7d 84       	ldd	r7, Y+13	; 0x0d
 74e:	8c 84       	ldd	r8, Y+12	; 0x0c
 750:	9b 84       	ldd	r9, Y+11	; 0x0b
 752:	aa 84       	ldd	r10, Y+10	; 0x0a
 754:	b9 84       	ldd	r11, Y+9	; 0x09
 756:	c8 84       	ldd	r12, Y+8	; 0x08
 758:	df 80       	ldd	r13, Y+7	; 0x07
 75a:	ee 80       	ldd	r14, Y+6	; 0x06
 75c:	fd 80       	ldd	r15, Y+5	; 0x05
 75e:	0c 81       	ldd	r16, Y+4	; 0x04
 760:	1b 81       	ldd	r17, Y+3	; 0x03
 762:	aa 81       	ldd	r26, Y+2	; 0x02
 764:	b9 81       	ldd	r27, Y+1	; 0x01
 766:	ce 0f       	add	r28, r30
 768:	d1 1d       	adc	r29, r1
 76a:	0f b6       	in	r0, 0x3f	; 63
 76c:	f8 94       	cli
 76e:	de bf       	out	0x3e, r29	; 62
 770:	0f be       	out	0x3f, r0	; 63
 772:	cd bf       	out	0x3d, r28	; 61
 774:	ed 01       	movw	r28, r26
 776:	08 95       	ret

00000778 <_exit>:
 778:	f8 94       	cli

0000077a <__stop_program>:
 77a:	ff cf       	rjmp	.-2      	; 0x77a <__stop_program>
